name: Build and Test

on:
  push:
    branches: [ view, model, model_viewmodel]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: '501db0f17ef6df184fcdbfbe0f87cde2313b6ab1'

    - name: Configure CMake
      shell: powershell
      # 我们让这个步骤即使失败也继续，以便能执行下一步打印日志
      continue-on-error: true 
      id: configure_cmake # 给这个步骤一个id，方便后面判断它是否失败
      run: |
        cmake -B ${{ github.workspace }}/build -G "Visual Studio 17 2022" -A x64 -DCMAKE_TOOLCHAIN_FILE="${env:VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"

    - name: Show vcpkg install log on failure
      # 仅当上一步（id: configure_cmake）失败时才执行此步骤
      if: steps.configure_cmake.outcome == 'failure'
      shell: powershell
      run: |
        echo "================ VCPKG INSTALL LOG ================"
        type ${{ github.workspace }}\build\vcpkg-manifest-install.log
        echo "==================================================="
        exit 1 # 打印完日志后，让整个工作流失败

    - name: Build Debug
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Test Debug
      working-directory: ${{github.workspace}}/build
      run: |
        ctest -C Debug --output-on-failure --verbose --output-junit test_results.xml
        
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always() # 同样，无论成功失败都运行，以便看到报告
      with:
        name: Test Results
        path: build/test_results.xml
        reporter: jest-junit # 指定报告的格式是 JUnit
        
    - name: Upload Debug Artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: LevelDevil-Debug
        path: ${{github.workspace}}/build/code/Debug/LevelDevil.exe 
